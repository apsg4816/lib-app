{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useRoute } from 'vue-router';\n\n// Define a ref to hold the book data\n\nexport default {\n  __name: 'viewContent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const book = ref(null);\n\n    // Get the route object using useRoute\n    const route = useRoute();\n\n    // Extract the book title from the route params\n    const bookTitle = route.params.book_title;\n\n    // Fetch the book data from the backend when the component is mounted\n    onMounted(async () => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/user_book/${bookTitle}`);\n        console.log(response);\n        book.value = response.data.book;\n      } catch (error) {\n        console.error('Error fetching book data:', error);\n      }\n    });\n    const __returned__ = {\n      book,\n      route,\n      bookTitle,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useRoute","book","route","bookTitle","params","book_title","response","get","console","log","value","data","error"],"sources":["/Users/apsg/JANMAD2/elibrary/src/components/viewContent.vue"],"sourcesContent":["<template>\n    <div v-if=\"book\">\n      <h1>{{ book.Book_Title }}</h1>\n      <p><strong>Author:</strong> {{ book.Author }}</p>\n      <div v-html=\"book.Content\"></div>\n    </div>\n  </template>\n  \n  <script setup>\n  import { ref, onMounted } from 'vue';\n  import axios from 'axios';\n  import { useRoute } from 'vue-router';\n  \n  // Define a ref to hold the book data\n  const book = ref(null);\n  \n  // Get the route object using useRoute\n  const route = useRoute();\n  \n  // Extract the book title from the route params\n  const bookTitle = route.params.book_title;\n  \n  // Fetch the book data from the backend when the component is mounted\n  onMounted(async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/user_book/${bookTitle}`);\n      console.log(response)\n      book.value = response.data.book;\n\n    } catch (error) {\n      console.error('Error fetching book data:', error);\n    }\n  });\n  </script>\n  "],"mappings":"AASE,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;;AAErC;;;;;;;;IACA,MAAMC,IAAI,GAAGJ,GAAG,CAAC,IAAI,CAAC;;IAEtB;IACA,MAAMK,KAAK,GAAGF,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMG,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,UAAU;;IAEzC;IACAP,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,mCAAkCJ,SAAU,EAAC,CAAC;QAChFK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrBL,IAAI,CAACS,KAAK,GAAGJ,QAAQ,CAACK,IAAI,CAACV,IAAI;MAEjC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}