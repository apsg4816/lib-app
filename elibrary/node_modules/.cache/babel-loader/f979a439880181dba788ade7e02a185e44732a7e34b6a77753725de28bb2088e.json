{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport Chart from 'chart.js/auto';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  __name: 'adDashSumm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const chart = ref(null);\n    onMounted(() => {\n      const ctx = chart.value.getContext('2d');\n\n      // Fetch data from the backend using Axios\n      const fetchData = async () => {\n        try {\n          const token = localStorage.getItem('token');\n\n          // Set up Axios with the token in the headers\n          const axiosInstance = axios.create({\n            baseURL: 'http://127.0.0.1:5000',\n            // Your API server's URL\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          const url = \"http://127.0.0.1:5000/book_request\";\n          const response = await axiosInstance.get(url);\n          console.log(response.data.bookReq);\n          renderChart(response.data.bookReq);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n      fetchData();\n      const renderChart = data => {\n        const sections = [];\n        const booksPerSection = {};\n\n        // Count the number of books per section\n        data.forEach(book => {\n          if (!sections.includes(book.Section_Title)) {\n            sections.push(book.Section_Title);\n            booksPerSection[book.Section_Title] = 0;\n          }\n          booksPerSection[book.Section_Title]++;\n        });\n\n        // Create chart data\n        const chartData = {\n          labels: sections,\n          datasets: [{\n            label: 'Total Books Requested',\n            data: sections.map(section => booksPerSection[section]),\n            backgroundColor: '#3e95cd'\n          }]\n        };\n\n        // Create and render the chart\n        new Chart(ctx, {\n          type: 'bar',\n          data: chartData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      };\n    });\n    function redirectToHome() {\n      router.push(`/adDash`);\n    }\n    function Logout() {\n      localStorage.clear();\n      router.push(`/loginPage/`);\n    }\n\n    // // onMounted(() => {\n    // //    chartData_func()\n\n    // });\n\n    const __returned__ = {\n      router,\n      chart,\n      redirectToHome,\n      Logout,\n      ref,\n      onMounted,\n      get Chart() {\n        return Chart;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","Chart","useRouter","axios","router","chart","ctx","value","getContext","fetchData","token","localStorage","getItem","axiosInstance","create","baseURL","headers","url","response","get","console","log","data","bookReq","renderChart","error","sections","booksPerSection","forEach","book","includes","Section_Title","push","chartData","labels","datasets","label","map","section","backgroundColor","type","options","scales","y","beginAtZero","redirectToHome","Logout","clear"],"sources":["/Users/apsg/JANMAD2/elibrary/src/components/adDashSumm.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-darkblue\">\n        <h4 class=\"navbar-brand\" href=\"#\">Summary of Books</h4>\n        <div class=\"navbar\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n\n                <li class=\"navbar-button\">\n                    <button type=\"navbar-button\" class=\"btn btn-primary\" @click=\"redirectToHome\">Home</button>\n                </li>\n\n                <li class=\"navbar-button\">\n                    <button type=\"navbar-button\" class=\"btn btn-primary\" @click=\"Logout\">Logout</button>\n                </li>\n            </ul>\n        </div>\n    </nav>\n    <hr style=\"border: 1px solid #4169E1; \">\n   \n    <template>\n    <div>\n      <canvas ref=\"chart\"></canvas>\n    </div>\n   </template>\n   \n</template>\n\n  \n  <script setup>\n  import { ref, onMounted } from 'vue';\n  import Chart from 'chart.js/auto';\n  import { useRouter } from 'vue-router';\n  import axios from 'axios';\n  \n\n  const router = useRouter();\n  const chart = ref(null);\n  \n  onMounted(() => {\n    const ctx = chart.value.getContext('2d');\n  \n    // Fetch data from the backend using Axios\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n  \n         // Set up Axios with the token in the headers\n        const axiosInstance = axios.create({\n        baseURL: 'http://127.0.0.1:5000', // Your API server's URL\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n\n        const url = \"http://127.0.0.1:5000/book_request\";\n        const response = await axiosInstance.get(url);\n        console.log(response.data.bookReq)\n        renderChart(response.data.bookReq);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n  \n    fetchData();\n  \n    const renderChart = (data) => {\n      const sections = [];\n      const booksPerSection = {};\n  \n      // Count the number of books per section\n      data.forEach((book) => {\n        if (!sections.includes(book.Section_Title)) {\n          sections.push(book.Section_Title);\n          booksPerSection[book.Section_Title] = 0;\n        }\n        booksPerSection[book.Section_Title]++;\n      });\n  \n      // Create chart data\n      const chartData = {\n        labels: sections,\n        datasets: [{\n          label: 'Total Books Requested',\n          data: sections.map((section) => booksPerSection[section]),\n          backgroundColor: '#3e95cd'\n        }]\n      };\n  \n      // Create and render the chart\n      new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    };\n  });\n \n\n\nfunction redirectToHome() {\n    router.push(`/adDash`)\n}\n\nfunction Logout() {\n    localStorage.clear();\n    router.push(`/loginPage/`)\n}\n\n// // onMounted(() => {\n// //    chartData_func()\n  \n// });\n\n\n</script>\n\n<style  scoped>\n.navbar {\n    display: flex;\n    /* Ensure items are in a row */\n    justify-content: space-between;\n    /* Push items to the ends of the container */\n    align-items: center;\n    /* Vertically center items if needed */\n    text-align: center;\n    padding: 10px;\n    /* Add padding as needed */\n    /* background-color: #333; Change background color if needed */\n    color: #fff\n        /*Change text color if needed */\n}\n\n.navbar-brand {\n    text-align: center;\n    /* Center-align the text within the navbar */\n    flex-grow: 1;\n    /* Allow the name to expand and take available space */\n    margin: 0;\n    /* Remove any default margin */\n    /* font-family: 'Arial', sans-serif;  */\n    font-size: 32px;\n    font-weight: bold;\n    color: #4169E1;\n}\n\n.navbar-button {\n    margin-left: 10px;\n    /* Add spacing between buttons */\n    color: #166295;\n    /* Additional button styles like background color, text color, etc. */\n}\n</style>"],"mappings":";AA4BE,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAGzB,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,KAAK,GAAGN,GAAG,CAAC,IAAI,CAAC;IAEvBC,SAAS,CAAC,MAAM;MACd,MAAMM,GAAG,GAAGD,KAAK,CAACE,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC;;MAExC;MACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;UAE1C;UACD,MAAMC,aAAa,GAAGV,KAAK,CAACW,MAAM,CAAC;YACnCC,OAAO,EAAE,uBAAuB;YAAE;YAClCC,OAAO,EAAE;cACL,eAAe,EAAG,UAASN,KAAM;YACrC;UACJ,CAAC,CAAC;UAEE,MAAMO,GAAG,GAAG,oCAAoC;UAChD,MAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAG,CAACF,GAAG,CAAC;UAC7CG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;UAClCC,WAAW,CAACN,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;QACpC,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;MACF,CAAC;MAEDhB,SAAS,CAAC,CAAC;MAEX,MAAMe,WAAW,GAAIF,IAAI,IAAK;QAC5B,MAAMI,QAAQ,GAAG,EAAE;QACnB,MAAMC,eAAe,GAAG,CAAC,CAAC;;QAE1B;QACAL,IAAI,CAACM,OAAO,CAAEC,IAAI,IAAK;UACrB,IAAI,CAACH,QAAQ,CAACI,QAAQ,CAACD,IAAI,CAACE,aAAa,CAAC,EAAE;YAC1CL,QAAQ,CAACM,IAAI,CAACH,IAAI,CAACE,aAAa,CAAC;YACjCJ,eAAe,CAACE,IAAI,CAACE,aAAa,CAAC,GAAG,CAAC;UACzC;UACAJ,eAAe,CAACE,IAAI,CAACE,aAAa,CAAC,EAAE;QACvC,CAAC,CAAC;;QAEF;QACA,MAAME,SAAS,GAAG;UAChBC,MAAM,EAAER,QAAQ;UAChBS,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,uBAAuB;YAC9Bd,IAAI,EAAEI,QAAQ,CAACW,GAAG,CAAEC,OAAO,IAAKX,eAAe,CAACW,OAAO,CAAC,CAAC;YACzDC,eAAe,EAAE;UACnB,CAAC;QACH,CAAC;;QAED;QACA,IAAItC,KAAK,CAACK,GAAG,EAAE;UACbkC,IAAI,EAAE,KAAK;UACXlB,IAAI,EAAEW,SAAS;UACfQ,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,WAAW,EAAE;cACf;YACF;UACF;QACF,CAAC,CAAC;MACJ,CAAC;IACH,CAAC,CAAC;IAIJ,SAASC,cAAcA,CAAA,EAAG;MACtBzC,MAAM,CAAC4B,IAAI,CAAE,SAAQ,CAAC;IAC1B;IAEA,SAASc,MAAMA,CAAA,EAAG;MACdnC,YAAY,CAACoC,KAAK,CAAC,CAAC;MACpB3C,MAAM,CAAC4B,IAAI,CAAE,aAAY,CAAC;IAC9B;;IAEA;IACA;;IAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}